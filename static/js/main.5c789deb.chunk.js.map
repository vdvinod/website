{"version":3,"sources":["controller/navigation.js","controller/header.js","controller/cards.js","App.js","serviceWorker.js","index.js"],"names":["navigation","className","type","id","htmlFor","onClick","document","getElementById","checked","href","header","card","classToAdd","forPicture","forHeading","forBack","App","cardHeadingTitle","class","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2NA2BeA,G,UAzBI,WAKf,OACI,yBAAKC,UAAU,cACf,2BAAOC,KAAK,WAAWD,UAAU,uBAAuBE,GAAG,gBAC3D,2BAAOC,QAAQ,cAAcH,UAAU,sBAC/B,0BAAMA,UAAU,oBAAhB,SACR,yBAAKA,UAAU,2BAGf,yBAAKA,UAAU,mBACf,wBAAIA,UAAU,mBAAmBI,QAZd,WACnBC,SAASC,eAAe,eAAeC,SAAWF,SAASC,eAAe,eAAeC,UAY7E,wBAAIP,UAAU,oBAAmB,uBAAGQ,KAAK,IAAIR,UAAU,oBAAtB,UACjC,wBAAIA,UAAU,oBAAmB,uBAAGQ,KAAK,QAAQR,UAAU,oBAA1B,aACjC,wBAAIA,UAAU,oBAAmB,uBAAGQ,KAAK,IAAIR,UAAU,oBAAtB,YACjC,wBAAIA,UAAU,oBAAmB,uBAAGQ,KAAK,IAAIR,UAAU,oBAAtB,iBCFtCS,EAhBA,WACX,OACI,4BAAQT,UAAU,UACd,yBAAKA,UAAU,qBAEf,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mBACV,0BAAMA,UAAU,yBAAhB,iBAAsD,iDAAtD,KACA,0BAAMA,UAAU,wBAAhB,iCAEJ,uBAAGQ,KAAK,IAAIR,UAAU,gCAAtB,cC6BDU,EAvCF,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACX,OACI,yBAAKX,UAAU,QAEf,yBAAKA,UAAU,gCACV,yBAAKA,UAAW,iBAAkBW,EAAWC,YAA7C,QAIA,wBAAIZ,UAAU,iBACV,0BAAMA,UAAW,sBAAsBW,EAAWE,YAAlD,iBAEJ,yBAAKb,UAAU,aACb,0BAAMA,UAAU,eAAhB,SAGF,yBAAKA,UAAU,iBACX,+BAST,yBAAKA,UAAW,+BAA+BW,EAAWG,SACrD,yBAAKd,UAAU,aACX,yBAAKA,UAAU,oBAIf,uBAAGQ,KAAK,SAASR,UAAU,kBAA3B,YCuDFe,MAhFf,WACE,OACE,yBAAKf,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACD,0BAAMA,UAAU,iBACf,yBAAMA,UAAU,mCAAmCE,GAAG,QAClD,wBAAIF,UAAU,qBAAd,YAIJ,yBAAKA,UAAU,OACH,yBAAKA,UAAU,cACZ,kBAAC,EAAD,CAAMgB,iBAAiB,cACtBL,WAAY,CAACC,WAAW,mBACxBC,WAAW,wBACXC,QAAQ,yBAIZ,yBAAKd,UAAU,cACf,kBAAC,EAAD,CAAMgB,iBAAiB,cACnBL,WAAY,CAACC,WAAW,mBACxBC,WAAW,wBACXC,QAAQ,yBAIZ,yBAAKd,UAAU,cACX,kBAAC,EAAD,CAAMgB,iBAAiB,cACnBL,WAAY,CAACC,WAAW,mBACxBC,WAAW,wBACXC,QAAQ,2BAK7B,4BAAQG,MAAM,UACT,yBAAKA,MAAM,qBAYX,yBAAKA,MAAM,OACP,yBAAKA,MAAM,cACP,yBAAKA,MAAM,sBAAX,yCAcJ,yBAAKA,MAAM,mBC/DPC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASnB,SAASC,eAAe,SD6H3C,kBAAmBmB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5c789deb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst navigation = () => {\n\n    const handleCheckBox = ()=> {\n        document.getElementById(\"navi-toggle\").checked = !document.getElementById(\"navi-toggle\").checked;\n    }\n    return (\n        <div className=\"navigation\">\n        <input type=\"checkbox\" className=\"navigation__checkbox\" id=\"navi-toggle\" />\n        <label htmlFor=\"navi-toggle\" className=\"navigation__button\">\n                <span className=\"navigation__icon\">&nbsp;</span></label> \n        <div className=\"navigation__background\">\n\n        </div>\n        <nav className=\"navigation__nav\">\n        <ul className=\"navigation__list\" onClick={handleCheckBox}>\n                    <li className=\"navigation__item\"><a href=\"#\" className=\"navigation__link\">About</a></li>\n                    <li className=\"navigation__item\"><a href=\"#work\" className=\"navigation__link\">My Works</a></li>\n                    <li className=\"navigation__item\"><a href=\"#\" className=\"navigation__link\">Contact</a></li>\n                    <li className=\"navigation__item\"><a href=\"#\" className=\"navigation__link\">Stories</a></li>\n                    </ul>\n        </nav>\n        </div>\n    )\n}\n\nexport default navigation;","import React from \"react\";\n\nconst header = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo-box\">\n            </div>\n            <div className=\"header__text-box\">\n                <h1 className=\"heading-primary\">\n                    <span className=\"heading-primary--main\">Hi, i'm Vinod <div>I design & build</div> </span>\n                    <span className=\"heading-primary--sub\">YES, I'AM AVAILABLE FOR HIRE</span>\n                </h1>\n                <a href=\"#\" className=\"btn btn--white btn--animated\">explore</a>\n            </div> \n       </header>\n    )\n}\n\nexport default header;","import React from \"react\";\n\nconst card = ({classToAdd}) => {\n    return (\n        <div className=\"card\">\n         \n        <div className=\"card__side card__side--front\">\n             <div className={\"card__picture \"+ classToAdd.forPicture}>\n                 &nbsp;\n             </div>\n            \n             <h4 className=\"card__heading\">\n                 <span className={\"card__heading-span \"+classToAdd.forHeading}>Tallint, RMS</span>\n             </h4>\n             <div className=\"card__btn\">\n               <span className=\"card__btn-1\">View</span>\n             </div>\n             \n             <div className=\"card__details\">\n                 <ul>\n                     {/* <li>3 day tours</li>\n                     <li>Up to 30 people</li>\n                     <li>2 tour guides</li>\n                     <li>Sleep in cozy hotels</li>\n                     <li>Difficulty: easy</li> */}\n                 </ul>\n             </div>\n        </div>\n        <div className={\"card__side card__side--back \"+classToAdd.forBack}>\n             <div className=\"card__cta\">\n                 <div className=\"card__price-box\">\n                     {/* <p className=\"card__price-only\">Only</p>\n                     <p className=\"card__price-value\">$297</p> */}\n                 </div>\n                 <a href=\"#popup\" className=\"btn btn--white\">View</a>\n             </div>\n         </div>\n    </div>\n    )\n}\n\nexport default card;","import React from 'react';\nimport './App.scss';\n\nimport Navigation from \"./controller/navigation\";\nimport Header from \"./controller/header\";\nimport Card from \"./controller/cards\";\n\nimport SpeedMeter from \"./controller/speedoMeter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Navigation />\n        <Header />\n       <main className=\"section-about\">\n        <div  className=\"u-ceneter-text u-margin-bottom-8\" id=\"work\">\n            <h1 className=\"heading-secondary\">\n                    My Work\n                </h1>\n        </div>\n        <div className=\"row\">\n                    <div className=\"col-1-of-3\" >\n                       <Card cardHeadingTitle=\"Tallint RMS\" \n                        classToAdd={{forPicture:\"card__picture--1\",\n                        forHeading:\"card__heading-span--1\", \n                        forBack:\"card__side--back-1\"}}/>\n                    </div>\n\n\n                    <div className=\"col-1-of-3\">\n                    <Card cardHeadingTitle=\"Tallint RMS\" \n                        classToAdd={{forPicture:\"card__picture--2\",\n                        forHeading:\"card__heading-span--2\", \n                        forBack:\"card__side--back-2\"}}/>\n                    </div>\n\n\n                    <div className=\"col-1-of-3\">\n                        <Card cardHeadingTitle=\"Tallint RMS\" \n                            classToAdd={{forPicture:\"card__picture--3\",\n                            forHeading:\"card__heading-span--3\", \n                            forBack:\"card__side--back-3\"}}/>\n                        </div>\n                </div>\n        {/* <SpeedMeter /> */}\n       </main>\n       <footer class=\"footer\">\n            <div class=\"footer__logo-box\">\n\n                {/* <picture class=\"footer__logo\">\n                    <source srcset=\"img/logo-green-small-1x.png 1x, img/logo-green-small-2x.png 2x\"\n                            media=\"(max-width: 37.5em)\"/>\n                    <img srcset=\"img/logo-green-1x.png 1x, img/logo-green-2x.png 2x\" alt=\"Full logo\" src=\"img/logo-green-2x.png\"/>\n                   \n                </picture> */}\n\n \n                \n            </div>\n            <div class=\"row\">\n                <div class=\"col-1-of-2\">\n                    <div class=\"footer__navigation\">\n                        faceboook\n                        instagram\n                        twitter\n                        linkedin\n                        {/* <ul class=\"footer__list\">\n                            <li class=\"footer__item\"><a href=\"#\" class=\"footer__link\">Company</a></li>\n                            <li class=\"footer__item\"><a href=\"#\" class=\"footer__link\">Contact us</a></li>\n                            <li class=\"footer__item\"><a href=\"#\" class=\"footer__link\">Carrers</a></li>\n                            <li class=\"footer__item\"><a href=\"#\" class=\"footer__link\">Privacy policy</a></li>\n                            <li class=\"footer__item\"><a href=\"#\" class=\"footer__link\">Terms</a></li>\n                        </ul> */}\n                    </div>\n                </div>\n                <div class=\"col-1-of-2\">\n                    {/* <p class=\"footer__copyright\">\n                        Built by <a href=\"#\" class=\"footer__link\">Jonas Schmedtmann</a> for his online course <a href=\"#\" class=\"footer__link\">Advanced CSS and Sass</a>.\n                        Copyright &copy; by Jonas Schmedtmann. You are 100% allowed to use this webpage for both personal\n                        and commercial use, but NOT to claim it as your own design. A credit to the original author, Jonas\n                        Schmedtmann, is of course highly appreciated!\n                    </p> */}\n                </div>\n            </div>\n        </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}